public class DemoOneSendEnvelope {
    
    @AuraEnabled
    public static void sendEnvelopeMethod(ID recordID){
        system.debug('RecordId:' + recordID);
        Id mySourceId = recordID; // The ID of the initiating Salesforce object.
        
        // Create an empty envelope.
        dfsle.Envelope myEnvelope = dfsle.EnvelopeService.getEmptyEnvelope(
            new dfsle.Entity(mySourceId));
        // The initiating Salesforce entity.
        
        //Use myEnvelope for later 
        //we will use a Salesforce contact record as a Recipient here
        Contact myContact = [SELECT Id, Name, Email FROM Contact where contact.lastname = 'DemoContactOne' LIMIT 1];
        
        //use the Recipient.fromSource method to create the Recipient
        dfsle.Recipient myRecipient = dfsle.Recipient.fromSource(
            myContact.Name, // Recipient name
            myContact.Email, // Recipient email
            null, //Optional phone number
            'Signer 1', //Role Name. Specify the exact role name from template
            new dfsle.Entity(myContact.Id)); //source object for the Recipient
        
        //add Recipient to the Envelope
        myEnvelope = myEnvelope.withRecipients(new List<dfsle.Recipient> { myRecipient });
        
        
        //myTemplateId contains the DocuSign Id of the DocuSign Template
        dfsle.UUID myTemplateId = dfsle.UUID.parse('27bcae6c-79de-47f0-a050-e1f54c748ea0');
        
        //create a new document for the Envelope
        dfsle.Document myDocument = dfsle.Document.fromTemplate(
            myTemplateId, // templateId in dfsle.UUID format
            'myTemplate'); // name of the template
        
        //add document to the Envelope
        myEnvelope = myEnvelope.withDocuments(new List<dfsle.Document> { myDocument });
        
        // Send the envelope.
        myEnvelope = dfsle.EnvelopeService.sendEnvelope(
            myEnvelope, // The envelope to send
            true); // Send now?
        
    }
    
    
}